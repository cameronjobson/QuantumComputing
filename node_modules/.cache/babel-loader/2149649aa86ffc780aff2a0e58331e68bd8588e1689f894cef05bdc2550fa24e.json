{"ast":null,"code":"var _jsxFileName = \"/Users/amer_/Desktop/Plugin Development Environment/Plugin Development/.obsidian/plugins/Survey Plugin/QuantumComputing/double-slit-experiment/src/diagramComponent.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoubleSlit = ({\n  wavelength,\n  distance,\n  slitSeparation,\n  showParticles\n}) => {\n  const slitWidth = 10;\n  const visualScalingFactor = .1;\n  const personalSeperation = slitSeparation * visualScalingFactor;\n  const personalDistance = distance * visualScalingFactor;\n  console.log(wavelength, distance, slitSeparation, showParticles);\n  console.log(personalDistance);\n  const drawLine = (info, style = {}) => {\n    const {\n      x,\n      y,\n      x1,\n      y1\n    } = info;\n    const {\n      color = \"black\",\n      width = 1\n    } = style;\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x1, y1);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.stroke();\n  };\n  const drawCanvas = ctx => {\n    // Clear canvas\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const canvasWidth = ctx.canvas.width;\n    const canvasHeight = ctx.canvas.height;\n\n    // Draw slits\n    ctx.fillStyle = \"black\";\n    // ctx.fillRect(\n    //   canvasWidth / 2 - personalSeperation / 2,\n    //   canvasHeight - 10,\n    //   slitWidth,\n    //   personalDistance\n    // );\n\n    // ctx.fillRect(\n    //   canvasWidth / 2 + personalSeperation / 2,\n    //   canvasHeight - 10,\n    //   slitWidth,\n    //   slitWidth\n    // );\n    drawLine({\n      x: canvasWidth / 2 - personalSeperation / 2,\n      y: canvasHeight - 10,\n      x1: canvasWidth / 2 - personalSeperation / 2,\n      y1: canvasHeight + personalDistance - 10\n    });\n\n    // Draw wave pattern\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: 500,\n      height: distance / 30,\n      ref: canvas => canvas && drawCanvas(canvas.getContext(\"2d\"))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c = DoubleSlit;\nexport default DoubleSlit;\nvar _c;\n$RefreshReg$(_c, \"DoubleSlit\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DoubleSlit","wavelength","distance","slitSeparation","showParticles","slitWidth","visualScalingFactor","personalSeperation","personalDistance","console","log","drawLine","info","style","x","y","x1","y1","color","width","ctx","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","drawCanvas","clearRect","canvas","height","canvasWidth","canvasHeight","fillStyle","children","ref","getContext","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amer_/Desktop/Plugin Development Environment/Plugin Development/.obsidian/plugins/Survey Plugin/QuantumComputing/double-slit-experiment/src/diagramComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst DoubleSlit = ({\n  wavelength,\n  distance,\n  slitSeparation,\n  showParticles,\n}) => {\n  const slitWidth = 10\n\n\n  const visualScalingFactor = .1\n  const personalSeperation = slitSeparation * visualScalingFactor\n  const personalDistance = distance * visualScalingFactor\n  console.log(wavelength, distance, slitSeparation, showParticles)\n  console.log(personalDistance)\n\n  const drawLine = (info, style = {}) => {\n     const { x, y, x1, y1 } = info;\n     const { color = \"black\", width = 1 } = style;\n\n     ctx.beginPath();\n     ctx.moveTo(x, y);\n     ctx.lineTo(x1, y1);\n     ctx.strokeStyle = color;\n     ctx.lineWidth = width;\n     ctx.stroke();\n   };\n\n  const drawCanvas = (ctx) => {\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const canvasWidth = ctx.canvas.width;\n    const canvasHeight = ctx.canvas.height;\n\n    // Draw slits\n    ctx.fillStyle = \"black\";\n    // ctx.fillRect(\n    //   canvasWidth / 2 - personalSeperation / 2,\n    //   canvasHeight - 10,\n    //   slitWidth,\n    //   personalDistance\n    // );\n\n    // ctx.fillRect(\n    //   canvasWidth / 2 + personalSeperation / 2,\n    //   canvasHeight - 10,\n    //   slitWidth,\n    //   slitWidth\n    // );\n    drawLine({\n      x: canvasWidth / 2 - personalSeperation / 2,\n      y: canvasHeight - 10,\n      x1: canvasWidth / 2 - personalSeperation / 2,\n      y1: canvasHeight+personalDistance-10,\n    });\n\n\n    // Draw wave pattern\n\n  };\n  return (\n    <div>\n      <canvas\n        width={500}\n        height={distance/30}\n        ref={(canvas) => canvas && drawCanvas(canvas.getContext(\"2d\"))}\n      />\n    </div>\n  );\n};\n\nexport default DoubleSlit;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAClBC,UAAU;EACVC,QAAQ;EACRC,cAAc;EACdC;AACF,CAAC,KAAK;EACJ,MAAMC,SAAS,GAAG,EAAE;EAGpB,MAAMC,mBAAmB,GAAG,EAAE;EAC9B,MAAMC,kBAAkB,GAAGJ,cAAc,GAAGG,mBAAmB;EAC/D,MAAME,gBAAgB,GAAGN,QAAQ,GAAGI,mBAAmB;EACvDG,OAAO,CAACC,GAAG,CAACT,UAAU,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,aAAa,CAAC;EAChEK,OAAO,CAACC,GAAG,CAACF,gBAAgB,CAAC;EAE7B,MAAMG,QAAQ,GAAGA,CAACC,IAAI,EAAEC,KAAK,GAAG,CAAC,CAAC,KAAK;IACpC,MAAM;MAAEC,CAAC;MAAEC,CAAC;MAAEC,EAAE;MAAEC;IAAG,CAAC,GAAGL,IAAI;IAC7B,MAAM;MAAEM,KAAK,GAAG,OAAO;MAAEC,KAAK,GAAG;IAAE,CAAC,GAAGN,KAAK;IAE5CO,GAAG,CAACC,SAAS,CAAC,CAAC;IACfD,GAAG,CAACE,MAAM,CAACR,CAAC,EAAEC,CAAC,CAAC;IAChBK,GAAG,CAACG,MAAM,CAACP,EAAE,EAAEC,EAAE,CAAC;IAClBG,GAAG,CAACI,WAAW,GAAGN,KAAK;IACvBE,GAAG,CAACK,SAAS,GAAGN,KAAK;IACrBC,GAAG,CAACM,MAAM,CAAC,CAAC;EACd,CAAC;EAEF,MAAMC,UAAU,GAAIP,GAAG,IAAK;IAE1B;IACAA,GAAG,CAACQ,SAAS,CAAC,CAAC,EAAE,CAAC,EAAER,GAAG,CAACS,MAAM,CAACV,KAAK,EAAEC,GAAG,CAACS,MAAM,CAACC,MAAM,CAAC;IACxD,MAAMC,WAAW,GAAGX,GAAG,CAACS,MAAM,CAACV,KAAK;IACpC,MAAMa,YAAY,GAAGZ,GAAG,CAACS,MAAM,CAACC,MAAM;;IAEtC;IACAV,GAAG,CAACa,SAAS,GAAG,OAAO;IACvB;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACAtB,QAAQ,CAAC;MACPG,CAAC,EAAEiB,WAAW,GAAG,CAAC,GAAGxB,kBAAkB,GAAG,CAAC;MAC3CQ,CAAC,EAAEiB,YAAY,GAAG,EAAE;MACpBhB,EAAE,EAAEe,WAAW,GAAG,CAAC,GAAGxB,kBAAkB,GAAG,CAAC;MAC5CU,EAAE,EAAEe,YAAY,GAACxB,gBAAgB,GAAC;IACpC,CAAC,CAAC;;IAGF;EAEF,CAAC;EACD,oBACET,OAAA;IAAAmC,QAAA,eACEnC,OAAA;MACEoB,KAAK,EAAE,GAAI;MACXW,MAAM,EAAE5B,QAAQ,GAAC,EAAG;MACpBiC,GAAG,EAAGN,MAAM,IAAKA,MAAM,IAAIF,UAAU,CAACE,MAAM,CAACO,UAAU,CAAC,IAAI,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GArEIzC,UAAU;AAuEhB,eAAeA,UAAU;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}