{"ast":null,"code":"// WaveInterference.js\nimport React from'react';import*as math from'mathjs';import WaveCanvas from'./WaveCanvas';import ParticleCanvas from'./ParticleCanvas';import ObserverEffectCanvas from'./ObserverEffectCanvas';import{jsx as _jsx}from\"react/jsx-runtime\";const WaveInterference=_ref=>{let{wavelength,distance,slitSeparation,showParticles,observerEffect,numPhotons,slitWidth}=_ref;// wave interference defines the \nconst points=math.range(-10,10,0.02).toArray();const intensity=points.map(x=>{const theta=Math.atan(x/distance);const pathDifference=slitSeparation*1e-6*Math.sin(theta);// we need to define slit width\nconst UnitslitWidth=slitWidth*1e-6;const beta=Math.PI*UnitslitWidth*Math.sin(theta)/(wavelength*1e-9);const alpha=Math.PI*slitSeparation*Math.sin(theta)/(wavelength*1e-9);return Math.cos(alpha)**2*Math.pow(Math.sin(beta)/beta,2);});if(observerEffect){return/*#__PURE__*/_jsx(ObserverEffectCanvas,{points:points,intensity:intensity,measure:true,wavelength:wavelength,distance:distance,slitSeparation:slitSeparation,slitWidth:slitWidth});}else if(showParticles){return/*#__PURE__*/_jsx(ParticleCanvas,{points:points,probabilityDensity:intensity,numPhotons:numPhotons,wavelength:wavelength});}else{return/*#__PURE__*/_jsx(WaveCanvas,{points:points,intensity:intensity,wavelength:wavelength});}};export default WaveInterference;","map":{"version":3,"names":["React","math","WaveCanvas","ParticleCanvas","ObserverEffectCanvas","jsx","_jsx","WaveInterference","_ref","wavelength","distance","slitSeparation","showParticles","observerEffect","numPhotons","slitWidth","points","range","toArray","intensity","map","x","theta","Math","atan","pathDifference","sin","UnitslitWidth","beta","PI","alpha","cos","pow","measure","probabilityDensity"],"sources":["/Users/amer_/Documents/GitHub/QuantumComputingPersonal/src/WaveInterference.js"],"sourcesContent":["// WaveInterference.js\n\nimport React from 'react';\nimport * as math from 'mathjs';\nimport WaveCanvas from './WaveCanvas';\nimport ParticleCanvas from './ParticleCanvas';\nimport ObserverEffectCanvas from './ObserverEffectCanvas';\n\n const WaveInterference = ({ wavelength, distance, slitSeparation, showParticles, observerEffect, numPhotons,slitWidth }) => {\n  // wave interference defines the \n  const points = math.range(-10, 10, 0.02).toArray();\n  const intensity = points.map(x => {\n    const theta = Math.atan(x / distance);\n    const pathDifference = slitSeparation * 1e-6 * Math.sin(theta);\n\n    // we need to define slit width\n    const UnitslitWidth=slitWidth*1e-6;\n    const beta =\n      (Math.PI * UnitslitWidth * Math.sin(theta)) / (wavelength * 1e-9);\n    const alpha = Math.PI*slitSeparation*Math.sin(theta)/(wavelength*1e-9);\n    return Math.cos(alpha)**2*Math.pow(Math.sin(beta)/beta,2);\n  });\n\n  if (observerEffect) {\n    return <ObserverEffectCanvas points={points} intensity={intensity} measure={true} wavelength = {wavelength} \n    distance = {distance} slitSeparation={slitSeparation} slitWidth = {slitWidth} />;\n\n  } else if (showParticles) {\n    return <ParticleCanvas points={points} probabilityDensity={intensity} numPhotons={numPhotons} wavelength={wavelength} />;\n  } else {\n    return <WaveCanvas points={points} intensity={intensity} wavelength={wavelength} />;\n  }\n};\n\nexport default WaveInterference;\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,GAAK,CAAAC,IAAI,KAAM,QAAQ,CAC9B,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,oBAAoB,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzD,KAAM,CAAAC,gBAAgB,CAAGC,IAAA,EAAmG,IAAlG,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,cAAc,CAAEC,aAAa,CAAEC,cAAc,CAAEC,UAAU,CAACC,SAAU,CAAC,CAAAP,IAAA,CACtH;AACA,KAAM,CAAAQ,MAAM,CAAGf,IAAI,CAACgB,KAAK,CAAC,CAAC,EAAE,CAAE,EAAE,CAAE,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,CAClD,KAAM,CAAAC,SAAS,CAAGH,MAAM,CAACI,GAAG,CAACC,CAAC,EAAI,CAChC,KAAM,CAAAC,KAAK,CAAGC,IAAI,CAACC,IAAI,CAACH,CAAC,CAAGX,QAAQ,CAAC,CACrC,KAAM,CAAAe,cAAc,CAAGd,cAAc,CAAG,IAAI,CAAGY,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC,CAE9D;AACA,KAAM,CAAAK,aAAa,CAACZ,SAAS,CAAC,IAAI,CAClC,KAAM,CAAAa,IAAI,CACPL,IAAI,CAACM,EAAE,CAAGF,aAAa,CAAGJ,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC,EAAKb,UAAU,CAAG,IAAI,CAAC,CACnE,KAAM,CAAAqB,KAAK,CAAGP,IAAI,CAACM,EAAE,CAAClB,cAAc,CAACY,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC,EAAEb,UAAU,CAAC,IAAI,CAAC,CACtE,MAAO,CAAAc,IAAI,CAACQ,GAAG,CAACD,KAAK,CAAC,EAAE,CAAC,CAACP,IAAI,CAACS,GAAG,CAACT,IAAI,CAACG,GAAG,CAACE,IAAI,CAAC,CAACA,IAAI,CAAC,CAAC,CAAC,CAC3D,CAAC,CAAC,CAEF,GAAIf,cAAc,CAAE,CAClB,mBAAOP,IAAA,CAACF,oBAAoB,EAACY,MAAM,CAAEA,MAAO,CAACG,SAAS,CAAEA,SAAU,CAACc,OAAO,CAAE,IAAK,CAACxB,UAAU,CAAIA,UAAW,CAC3GC,QAAQ,CAAIA,QAAS,CAACC,cAAc,CAAEA,cAAe,CAACI,SAAS,CAAIA,SAAU,CAAE,CAAC,CAElF,CAAC,IAAM,IAAIH,aAAa,CAAE,CACxB,mBAAON,IAAA,CAACH,cAAc,EAACa,MAAM,CAAEA,MAAO,CAACkB,kBAAkB,CAAEf,SAAU,CAACL,UAAU,CAAEA,UAAW,CAACL,UAAU,CAAEA,UAAW,CAAE,CAAC,CAC1H,CAAC,IAAM,CACL,mBAAOH,IAAA,CAACJ,UAAU,EAACc,MAAM,CAAEA,MAAO,CAACG,SAAS,CAAEA,SAAU,CAACV,UAAU,CAAEA,UAAW,CAAE,CAAC,CACrF,CACF,CAAC,CAED,cAAe,CAAAF,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}