{"ast":null,"code":"var _jsxFileName = \"/Users/amer_/Desktop/Plugin Development Environment/Plugin Development/.obsidian/plugins/Survey Plugin/QuantumComputing/double-slit-experiment/src/diagramComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoubleSlit = () => {\n  _s();\n  const [slitDistance, setSlitDistance] = useState(100);\n  const [slitSeparation, setSlitSeparation] = useState(5);\n  const [wavelength, setWavelength] = useState(500);\n  const drawCanvas = ctx => {\n    // Clear canvas\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const canvasWidth = ctx.canvas.width;\n    const canvasHeight = ctx.canvas.height;\n\n    // Draw slits\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(canvasWidth / 2 - slitSeparation / 2, canvasHeight - slitDistance, 2, slitDistance);\n    ctx.fillRect(canvasWidth / 2 + slitSeparation / 2, canvasHeight - slitDistance, 2, slitDistance);\n\n    // Draw wave pattern\n    ctx.strokeStyle = \"blue\";\n    ctx.beginPath();\n    for (let x = 0; x < canvasWidth; x++) {\n      const y = canvasHeight / 2 + Math.sin((x - canvasWidth / 2) * 2 * Math.PI / wavelength) * 50;\n      if (x === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.stroke();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: 500,\n      height: 300,\n      ref: canvas => canvas && drawCanvas(canvas.getContext(\"2d\"))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Slit Distance: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: slitDistance,\n        onChange: e => setSlitDistance(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Slit Separation: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: slitSeparation,\n        onChange: e => setSlitSeparation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Wavelength: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: wavelength,\n        onChange: e => setWavelength(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(DoubleSlit, \"GoetGLnNOi77fsjYIXivHIKAATc=\");\n_c = DoubleSlit;\nexport default DoubleSlit;\nvar _c;\n$RefreshReg$(_c, \"DoubleSlit\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DoubleSlit","_s","slitDistance","setSlitDistance","slitSeparation","setSlitSeparation","wavelength","setWavelength","drawCanvas","ctx","clearRect","canvas","width","height","canvasWidth","canvasHeight","fillStyle","fillRect","strokeStyle","beginPath","x","y","Math","sin","PI","moveTo","lineTo","stroke","children","ref","getContext","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/amer_/Desktop/Plugin Development Environment/Plugin Development/.obsidian/plugins/Survey Plugin/QuantumComputing/double-slit-experiment/src/diagramComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst DoubleSlit = () => {\n  const [slitDistance, setSlitDistance] = useState(100);\n  const [slitSeparation, setSlitSeparation] = useState(5);\n  const [wavelength, setWavelength] = useState(500);\n\n  const drawCanvas = (ctx) => {\n    // Clear canvas\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const canvasWidth = ctx.canvas.width;\n    const canvasHeight = ctx.canvas.height;\n\n    // Draw slits\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(\n      canvasWidth / 2 - slitSeparation / 2,\n      canvasHeight - slitDistance,\n      2,\n      slitDistance\n    );\n    ctx.fillRect(\n      canvasWidth / 2 + slitSeparation / 2,\n      canvasHeight - slitDistance,\n      2,\n      slitDistance\n    );\n\n    // Draw wave pattern\n    ctx.strokeStyle = \"blue\";\n    ctx.beginPath();\n    for (let x = 0; x < canvasWidth; x++) {\n      const y =\n        canvasHeight / 2 +\n        Math.sin(((x - canvasWidth / 2) * 2 * Math.PI) / wavelength) * 50;\n      if (x === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.stroke();\n  };\n\n  return (\n    <div>\n      <canvas\n        width={500}\n        height={300}\n        ref={(canvas) => canvas && drawCanvas(canvas.getContext(\"2d\"))}\n      />\n      <div>\n        <label>Slit Distance: </label>\n        <input\n          type=\"number\"\n          value={slitDistance}\n          onChange={(e) => setSlitDistance(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Slit Separation: </label>\n        <input\n          type=\"number\"\n          value={slitSeparation}\n          onChange={(e) => setSlitSeparation(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Wavelength: </label>\n        <input\n          type=\"number\"\n          value={wavelength}\n          onChange={(e) => setWavelength(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default DoubleSlit;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}