{"ast":null,"code":"var _jsxFileName = \"/Users/amer_/Desktop/Plugin Development Environment/Plugin Development/.obsidian/plugins/Survey Plugin/QuantumComputing/double-slit-experiment/src/markdownMath.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkdownWithMath = ({\n  markdownText\n}) => {\n  _s();\n  useEffect(() => {\n    // Once the component mounts, call MathJax to typeset the content\n    window.MathJax.typeset();\n  });\n  const getMarkdownText = () => {\n    const rawMarkup = new Marked(markdownText, {\n      breaks: true\n    });\n    return {\n      __html: rawMarkup\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    dangerouslySetInnerHTML: getMarkdownText()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n_s(MarkdownWithMath, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MarkdownWithMath;\nexport default MarkdownWithMath;\nvar _c;\n$RefreshReg$(_c, \"MarkdownWithMath\");","map":{"version":3,"names":["React","useEffect","Marked","jsxDEV","_jsxDEV","MarkdownWithMath","markdownText","_s","window","MathJax","typeset","getMarkdownText","rawMarkup","breaks","__html","dangerouslySetInnerHTML","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amer_/Desktop/Plugin Development Environment/Plugin Development/.obsidian/plugins/Survey Plugin/QuantumComputing/double-slit-experiment/src/markdownMath.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Marked } from \"marked\";\n\nconst MarkdownWithMath = ({ markdownText }) => {\n  useEffect(() => {\n    // Once the component mounts, call MathJax to typeset the content\n    window.MathJax.typeset();\n  });\n\n  const getMarkdownText = () => {\n    const rawMarkup = new Marked(markdownText, { breaks: true });\n    return { __html: rawMarkup };\n  };\n\n  return <div dangerouslySetInnerHTML={getMarkdownText()} />;\n};\n\nexport default MarkdownWithMath;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC7CN,SAAS,CAAC,MAAM;IACd;IACAO,MAAM,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,SAAS,GAAG,IAAIV,MAAM,CAACI,YAAY,EAAE;MAAEO,MAAM,EAAE;IAAK,CAAC,CAAC;IAC5D,OAAO;MAAEC,MAAM,EAAEF;IAAU,CAAC;EAC9B,CAAC;EAED,oBAAOR,OAAA;IAAKW,uBAAuB,EAAEJ,eAAe,CAAC;EAAE;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D,CAAC;AAACZ,EAAA,CAZIF,gBAAgB;AAAAe,EAAA,GAAhBf,gBAAgB;AActB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}