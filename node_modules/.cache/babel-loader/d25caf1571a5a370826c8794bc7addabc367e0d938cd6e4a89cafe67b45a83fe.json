{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const DoubleSlit=_ref=>{let{wavelength,distance,slitSeparation,showParticles,slitWidth,DoubleSlit}=_ref;const localSlitWidth=slitWidth/50;const visualScalingFactor=.1;const personalSeperation=slitSeparation*.3;const personalDistance=distance*visualScalingFactor;console.log(wavelength,distance,slitSeparation,showParticles);console.log(personalDistance);const drawCanvas=ctx=>{// Clear canvas\nctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);const canvasWidth=ctx.canvas.width;const canvasHeight=ctx.canvas.height;const drawLine=function(info){let style=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const{x,y,x1,y1,thickness=1}=info;const{color=\"black\",width=thickness}=style;ctx.beginPath();ctx.moveTo(x,y);ctx.lineTo(x1,y1);ctx.strokeStyle=color;ctx.lineWidth=width;ctx.stroke();};// Draw slits\nctx.fillStyle=\"green\";// left slit\nconst midHeight=canvasHeight-10;if(DoubleSlit){drawLine({x:canvasWidth/2-personalSeperation/2-localSlitWidth/2,y:canvasHeight-20,x1:canvasWidth/2-personalSeperation/2-localSlitWidth/2,y1:canvasHeight+personalDistance-10,thickness:2});drawLine({x:canvasWidth/2-personalSeperation/2+localSlitWidth/2,y:canvasHeight-20,x1:canvasWidth/2-personalSeperation/2+localSlitWidth/2,y1:canvasHeight+personalDistance-10,thickness:2});// right slit\ndrawLine({x:canvasWidth/2+personalSeperation/2-localSlitWidth/2,y:canvasHeight-20,x1:canvasWidth/2+personalSeperation/2-localSlitWidth/2,y1:canvasHeight+personalDistance-10,thickness:2});drawLine({x:canvasWidth/2+personalSeperation/2+localSlitWidth/2,y:canvasHeight-20,x1:canvasWidth/2+personalSeperation/2+localSlitWidth/2,y1:canvasHeight+personalDistance-10,thickness:2});drawLine({x:canvasWidth/2-personalSeperation/2+localSlitWidth/2,x1:canvasWidth/2+personalSeperation/2-localSlitWidth/2,y:midHeight,y1:midHeight});// outer bars\ndrawLine({x:0,x1:canvasWidth/2-personalSeperation/2-localSlitWidth/2,y:midHeight,y1:midHeight});drawLine({x:canvasWidth/2+personalSeperation/2+localSlitWidth/2,x1:canvasWidth,y:midHeight,y1:midHeight});}else{drawLine({x:canvasWidth/2-localSlitWidth/2,y:canvasHeight-20,x1:canvasWidth/2-localSlitWidth/2,y1:canvasHeight+personalDistance-10,thickness:2});drawLine({x:canvasWidth/2+localSlitWidth/2,y:canvasHeight-20,x1:canvasWidth/2+localSlitWidth/2,y1:canvasHeight+personalDistance-10,thickness:2});drawLine({x:0,x1:canvasWidth/2-localSlitWidth/2,y:midHeight,y1:midHeight});drawLine({x:canvasWidth/2+localSlitWidth/2,x1:canvasWidth,y:midHeight,y1:midHeight});}// connecting bar\n// then we draw a horizontal line between the two slits\n// draw border around canvas\n// make them thicker\ndrawLine({x:0,x1:canvasWidth,y:0,y1:0,thickness:10});drawLine({x:0,x1:0,y:0,y1:canvasHeight,thickness:10});drawLine({x:canvasWidth,x1:canvasWidth,y:0,y1:canvasHeight,thickness:10});// Draw wave pattern\n};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"canvas\",{width:1000,height:distance/30,ref:canvas=>canvas&&drawCanvas(canvas.getContext(\"2d\"))})});};export default DoubleSlit;","map":{"version":3,"names":["React","useState","jsx","_jsx","DoubleSlit","_ref","wavelength","distance","slitSeparation","showParticles","slitWidth","localSlitWidth","visualScalingFactor","personalSeperation","personalDistance","console","log","drawCanvas","ctx","clearRect","canvas","width","height","canvasWidth","canvasHeight","drawLine","info","style","arguments","length","undefined","x","y","x1","y1","thickness","color","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","fillStyle","midHeight","children","ref","getContext"],"sources":["/Users/amer_/Documents/GitHub/QuantumComputingPersonal/src/diagramComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst DoubleSlit = ({\n  wavelength,\n  distance,\n  slitSeparation,\n  showParticles,\n  slitWidth,\n  DoubleSlit,\n}) => {\n  const localSlitWidth = slitWidth/50;\n\n\n\n  const visualScalingFactor = .1\n  const personalSeperation = slitSeparation * .3\n  const personalDistance = distance * visualScalingFactor\n  console.log(wavelength, distance, slitSeparation, showParticles)\n  console.log(personalDistance)\n\n  \n\n  const drawCanvas = (ctx) => {\n    // Clear canvas\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const canvasWidth = ctx.canvas.width;\n    const canvasHeight = ctx.canvas.height;\n    const drawLine = (info, style = {}) => {\n      const { x, y, x1, y1, thickness = 1 } = info;\n      const { color = \"black\", width = thickness } = style;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x1, y1);\n      ctx.strokeStyle = color;\n      ctx.lineWidth = width;\n      ctx.stroke();\n    };\n\n    // Draw slits\n    ctx.fillStyle = \"green\";\n\n    // left slit\n    const midHeight = canvasHeight - 10;\n    if (DoubleSlit) {\n      drawLine({\n        x: canvasWidth / 2 - personalSeperation / 2 - localSlitWidth / 2,\n        y: canvasHeight - 20,\n        x1: canvasWidth / 2 - personalSeperation / 2 - localSlitWidth / 2,\n        y1: canvasHeight + personalDistance - 10,\n        thickness: 2,\n      });\n      drawLine({\n        x: canvasWidth / 2 - personalSeperation / 2 + localSlitWidth / 2,\n        y: canvasHeight - 20,\n        x1: canvasWidth / 2 - personalSeperation / 2 + localSlitWidth / 2,\n        y1: canvasHeight + personalDistance - 10,\n        thickness: 2,\n      });\n\n      // right slit\n      drawLine({\n        x: canvasWidth / 2 + personalSeperation / 2 - localSlitWidth / 2,\n        y: canvasHeight - 20,\n        x1: canvasWidth / 2 + personalSeperation / 2 - localSlitWidth / 2,\n        y1: canvasHeight + personalDistance - 10,\n        thickness: 2,\n      });\n      drawLine({\n        x: canvasWidth / 2 + personalSeperation / 2 + localSlitWidth / 2,\n        y: canvasHeight - 20,\n        x1: canvasWidth / 2 + personalSeperation / 2 + localSlitWidth / 2,\n        y1: canvasHeight + personalDistance - 10,\n        thickness: 2,\n      });\n      drawLine({\n        x: canvasWidth / 2 - personalSeperation / 2 + localSlitWidth / 2,\n        x1: canvasWidth / 2 + personalSeperation / 2 - localSlitWidth / 2,\n        y: midHeight,\n        y1: midHeight,\n      });\n\n      // outer bars\n      drawLine({\n        x: 0,\n        x1: canvasWidth / 2 - personalSeperation / 2 - localSlitWidth / 2,\n        y: midHeight,\n        y1: midHeight,\n      });\n      drawLine({\n        x: canvasWidth / 2 + personalSeperation / 2 + localSlitWidth / 2,\n        x1: canvasWidth,\n        y: midHeight,\n        y1: midHeight,\n      });\n    } \n    else {\n      drawLine({\n        x: canvasWidth / 2 - localSlitWidth / 2,\n        y: canvasHeight - 20,\n        x1: canvasWidth / 2 - localSlitWidth / 2,\n        y1: canvasHeight + personalDistance - 10,\n        thickness: 2,\n      });\n      drawLine({\n        x: canvasWidth / 2 + localSlitWidth / 2,\n        y: canvasHeight - 20,\n        x1: canvasWidth / 2 + localSlitWidth / 2,\n        y1: canvasHeight + personalDistance - 10,\n        thickness: 2,\n      });\n      drawLine({\n        x: 0,\n        x1: canvasWidth / 2  - localSlitWidth / 2,\n        y: midHeight,\n        y1: midHeight,\n      });\n      drawLine({\n        x: canvasWidth / 2  + localSlitWidth / 2,\n        x1: canvasWidth,\n        y: midHeight,\n        y1: midHeight,\n      });\n\n    }\n\n    // connecting bar\n\n    // then we draw a horizontal line between the two slits\n\n    // draw border around canvas\n    // make them thicker\n\n    drawLine({\n      x: 0,\n      x1: canvasWidth,\n      y: 0,\n      y1: 0,\n      thickness: 10,\n    });\n    drawLine({\n      x: 0,\n      x1: 0,\n      y: 0,\n      y1: canvasHeight,\n      thickness: 10,\n    });\n    drawLine({\n      x: canvasWidth,\n      x1: canvasWidth,\n      y: 0,\n      y1: canvasHeight,\n      thickness: 10,\n    });\n\n    // Draw wave pattern\n  };\n  return (\n    <div>\n      <canvas\n        width={1000}\n        height={distance/30}\n        ref={(canvas) => canvas && drawCanvas(canvas.getContext(\"2d\"))}\n      />\n    </div>\n  );\n};\n\nexport default DoubleSlit;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}