{"ast":null,"code":"// App.js\nimport React,{useState,useEffect}from\"react\";import'./App.css';import WaveInterference from'./WaveInterference';import DoubleSlit from\"./diagramComponent\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[htmlContent,setHtmlContent]=useState(\"\");const[wavelength,setWavelength]=useState(700);// in nanometers\nconst[distance,setDistance]=useState(2000);// distance to screen in mm\nconst[slitSeparation,setSlitSeparation]=useState(800);// slit separation in micrometers\nconst[slitWidth,setSlitWidth]=useState(300);const[showParticles,setShowParticles]=useState(false);const[observerEffect,setObserverEffect]=useState(false);const[numPhotons,setNumPhotons]=useState(10000);// default number of photons\nuseEffect(()=>{fetch(\"converted_html.html\").then(response=>response.text()).then(html=>{setHtmlContent(html);if(window.MathJax){window.MathJax.typesetPromise();}});},[]);const createMarkup=html=>{return{__html:html};};console.log(createMarkup(htmlContent));return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Double Slit Experiment Simulation\"})}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexGrow:1},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",style:{marginRight:\"1rem\",width:\"500px\"},children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Wavelength (nm):\",/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"380\",max:\"750\",value:wavelength,onChange:e=>setWavelength(Number(e.target.value))}),wavelength,\" nm\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Distance to Screen (mm):\",/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"1000\",max:\"5000\",value:distance,onChange:e=>setDistance(Number(e.target.value))}),distance,\" mm\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Slit Seperation (\\u03BCm):\",/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"400\",max:\"1500\",value:slitSeparation,onChange:e=>setSlitSeparation(Number(e.target.value))}),slitSeparation,\" \\u03BCm\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Slit width(\\u03BCm):\",/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"300\",max:\"2000\",value:slitWidth,onChange:e=>setSlitWidth(Number(e.target.value))}),slitWidth,\" \\u03BCm\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Show Particles:\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showParticles,onChange:e=>setShowParticles(e.target.checked)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Insensity Graph:\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:observerEffect,onChange:e=>setObserverEffect(e.target.checked)})]}),showParticles&&/*#__PURE__*/ // Conditionally render \"Number of Photons\" if showParticles is true\n_jsxs(\"label\",{htmlFor:\"numPhotons\",children:[\"Number of Photons:\",/*#__PURE__*/_jsx(\"input\",{id:\"numPhotons\",type:\"range\",min:\"100\",max:\"20000\",step:\"100\",value:numPhotons,onChange:e=>setNumPhotons(Number(e.target.value))}),numPhotons]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"WaveInterferenceContainer\",children:[/*#__PURE__*/_jsx(WaveInterference,{wavelength:wavelength,distance:distance,slitSeparation:slitSeparation,showParticles:showParticles,observerEffect:observerEffect,numPhotons:numPhotons,slitWidth:slitWidth// Pass the number of photons to the WaveInterference component\n}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(DoubleSlit,{wavelength:wavelength,distance:distance,slitSeparation:slitSeparation,showParticles:showParticles,slitWidth:slitWidth})})]}),/*#__PURE__*/_jsx(\"div\",{style:{flex:1},className:\"html-content-column\",children:/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:createMarkup(htmlContent)})})]})]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","WaveInterference","DoubleSlit","jsx","_jsx","jsxs","_jsxs","App","htmlContent","setHtmlContent","wavelength","setWavelength","distance","setDistance","slitSeparation","setSlitSeparation","slitWidth","setSlitWidth","showParticles","setShowParticles","observerEffect","setObserverEffect","numPhotons","setNumPhotons","fetch","then","response","text","html","window","MathJax","typesetPromise","createMarkup","__html","console","log","className","children","style","display","flexGrow","marginRight","width","type","min","max","value","onChange","e","Number","target","checked","htmlFor","id","step","flex","dangerouslySetInnerHTML"],"sources":["/Users/amer_/Desktop/Plugin Development Environment/Plugin Development/.obsidian/plugins/Survey Plugin/QuantumComputing/double-slit-experiment/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport WaveInterference from './WaveInterference';\nimport DoubleSlit from \"./diagramComponent\";\nfunction App() {\n   const [htmlContent, setHtmlContent] = useState(\"\");\n\n\n  \n  const [wavelength, setWavelength] = useState(700); // in nanometers\n  const [distance, setDistance] = useState(2000); // distance to screen in mm\n  const [slitSeparation, setSlitSeparation] = useState(800); // slit separation in micrometers\n  const [slitWidth, setSlitWidth] = useState(300);\n  const [showParticles, setShowParticles] = useState(false);\n    \n  const [observerEffect, setObserverEffect] = useState(false);\n  const [numPhotons, setNumPhotons] = useState(10000); // default number of photons\n  useEffect(() => {\n    fetch(\"converted_html.html\")\n      .then((response) => response.text())\n      .then((html) => {\n        setHtmlContent(html);\n        if (window.MathJax) {\n          window.MathJax.typesetPromise();\n        }\n      });\n  }, []);\n  const createMarkup = (html) => {\n    return { __html: html };\n  };\n  console.log(createMarkup(htmlContent));\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Double Slit Experiment Simulation</h1>\n      </header>\n      <div style={{ display: \"flex\", flexGrow: 1 }}>\n        <div style={{ display: \"flex\" }}>\n          <div\n            className=\"controls\"\n            style={{ marginRight: \"1rem\", width: \"500px\" }}\n          >\n            <label>\n              Wavelength (nm):\n              <input\n                type=\"range\"\n                min=\"380\"\n                max=\"750\"\n                value={wavelength}\n                onChange={(e) => setWavelength(Number(e.target.value))}\n              />\n              {wavelength} nm\n            </label>\n            <label>\n              Distance to Screen (mm):\n              <input\n                type=\"range\"\n                min=\"1000\"\n                max=\"5000\"\n                value={distance}\n                onChange={(e) => setDistance(Number(e.target.value))}\n              />\n              {distance} mm\n            </label>\n            <label>\n              Slit Seperation (μm):\n              <input\n                type=\"range\"\n                min=\"400\"\n                max=\"1500\"\n                value={slitSeparation}\n                onChange={(e) => setSlitSeparation(Number(e.target.value))}\n              />\n              {slitSeparation} μm\n            </label>\n            <label>\n              Slit width(μm):\n              <input\n                type=\"range\"\n                min=\"300\"\n                max=\"2000\"\n                value={slitWidth}\n                onChange={(e) => setSlitWidth(Number(e.target.value))}\n              />\n              {slitWidth} μm\n            </label>\n            <label>\n              Show Particles:\n              <input\n                type=\"checkbox\"\n                checked={showParticles}\n                onChange={(e) => setShowParticles(e.target.checked)}\n              />\n            </label>\n              <label>\n                Insensity Graph:\n                <input\n                  type=\"checkbox\"\n                  checked={observerEffect}\n                  onChange={(e) => setObserverEffect(e.target.checked)}\n\n                />\n              </label>\n            \n            {showParticles && ( // Conditionally render \"Number of Photons\" if showParticles is true\n              <label htmlFor=\"numPhotons\">\n                Number of Photons:\n                <input\n                  id=\"numPhotons\"\n                  type=\"range\"\n                  min=\"100\"\n                  max=\"20000\"\n                  step=\"100\"\n                  value={numPhotons}\n                  onChange={(e) => setNumPhotons(Number(e.target.value))}\n                />\n                {numPhotons}\n              </label>\n            )}\n          </div>\n          <div style={{ flex: 1 }}>\n            <div className=\"WaveInterferenceContainer\">\n              <WaveInterference\n                wavelength={wavelength}\n                distance={distance}\n                slitSeparation={slitSeparation}\n                showParticles={showParticles}\n                observerEffect={observerEffect}\n                numPhotons={numPhotons}\n                slitWidth={slitWidth} // Pass the number of photons to the WaveInterference component\n              />\n              <div>\n                <DoubleSlit\n                  wavelength={wavelength}\n                  distance={distance}\n                  slitSeparation={slitSeparation}\n                  showParticles={showParticles}\n                  slitWidth={slitWidth}\n                />\n              </div>\n            </div>\n            <div style={{ flex: 1 }} className=\"html-content-column\">\n              <div dangerouslySetInnerHTML={createMarkup(htmlContent)} />\n            </div>\n\n            {/* HTML content column */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}