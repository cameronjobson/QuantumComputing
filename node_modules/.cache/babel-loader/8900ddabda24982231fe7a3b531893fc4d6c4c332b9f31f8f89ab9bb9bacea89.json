{"ast":null,"code":"var _jsxFileName = \"/Users/amer_/Desktop/Plugin Development Environment/Plugin Development/.obsidian/plugins/Survey Plugin/QuantumComputing/double-slit-experiment/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport WaveInterference from './WaveInterference';\nimport DoubleSlit from \"./diagramComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [wavelength, setWavelength] = useState(700); // in nanometers\n  const [distance, setDistance] = useState(2000); // distance to screen in mm\n  const [slitSeparation, setSlitSeparation] = useState(250); // slit separation in micrometers\n  const [slitWidth, setSlitWidth] = useState(.1);\n  const [showParticles, setShowParticles] = useState(false);\n  const [observerEffect, setObserverEffect] = useState(false);\n  const [numPhotons, setNumPhotons] = useState(10000); // default number of photons\n  useEffect(() => {\n    // Fetch the HTML content from the public folder or wherever it's stored\n    fetch(\"converted_html.html\").then(response => response.text()).then(html => {\n      setHtmlContent(html);\n    });\n  }, []);\n  const createMarkup = html => {\n    return {\n      __html: html\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Double Slit Experiment Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          style: {\n            marginRight: \"1rem\",\n            width: \"500px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Wavelength (nm):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"380\",\n              max: \"750\",\n              value: wavelength,\n              onChange: e => setWavelength(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), wavelength, \" nm\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Distance to Screen (mm):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1000\",\n              max: \"5000\",\n              value: distance,\n              onChange: e => setDistance(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), distance, \" mm\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Slit Seperation (\\u03BCm):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"800\",\n              max: \"1500\",\n              value: slitSeparation,\n              onChange: e => setSlitSeparation(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), slitSeparation, \" \\u03BCm\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Slit width(\\u03BCm):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"300\",\n              max: \"2000\",\n              value: slitWidth,\n              onChange: e => setSlitWidth(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), slitWidth, \" \\u03BCm\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Show Particles:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: showParticles,\n              onChange: e => setShowParticles(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), showParticles &&\n          /*#__PURE__*/\n          // Conditionally render \"Number of Photons\" if showParticles is true\n          _jsxDEV(\"label\", {\n            children: [\"Observer Effect:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: observerEffect,\n              onChange: e => setObserverEffect(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), showParticles &&\n          /*#__PURE__*/\n          // Conditionally render \"Number of Photons\" if showParticles is true\n          _jsxDEV(\"label\", {\n            htmlFor: \"numPhotons\",\n            children: [\"Number of Photons:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"numPhotons\",\n              type: \"range\",\n              min: \"100\",\n              max: \"20000\",\n              step: \"100\",\n              value: numPhotons,\n              onChange: e => setNumPhotons(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), numPhotons]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"WaveInterferenceContainer\",\n            children: /*#__PURE__*/_jsxDEV(WaveInterference, {\n              wavelength: wavelength,\n              distance: distance,\n              slitSeparation: slitSeparation,\n              showParticles: showParticles,\n              observerEffect: observerEffect,\n              numPhotons: numPhotons,\n              slitWidth: slitWidth // Pass the number of photons to the WaveInterference component\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DoubleSlit, {\n              wavelength: wavelength,\n              distance: distance,\n              slitSeparation: slitSeparation,\n              showParticles: showParticles,\n              slitWidth: slitWidth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            className: \"html-content-column\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: createMarkup(htmlContent)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uC/gL3w1iBGcZ9zH1lIt1BPEvG8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WaveInterference","DoubleSlit","jsxDEV","_jsxDEV","App","_s","wavelength","setWavelength","distance","setDistance","slitSeparation","setSlitSeparation","slitWidth","setSlitWidth","showParticles","setShowParticles","observerEffect","setObserverEffect","numPhotons","setNumPhotons","fetch","then","response","text","html","setHtmlContent","createMarkup","__html","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexGrow","marginRight","width","type","min","max","value","onChange","e","Number","target","checked","htmlFor","id","step","flex","dangerouslySetInnerHTML","htmlContent","_c","$RefreshReg$"],"sources":["/Users/amer_/Desktop/Plugin Development Environment/Plugin Development/.obsidian/plugins/Survey Plugin/QuantumComputing/double-slit-experiment/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport WaveInterference from './WaveInterference';\nimport DoubleSlit from \"./diagramComponent\";\n\nfunction App() {\n\n\n  \n  const [wavelength, setWavelength] = useState(700); // in nanometers\n  const [distance, setDistance] = useState(2000); // distance to screen in mm\n  const [slitSeparation, setSlitSeparation] = useState(250); // slit separation in micrometers\n  const [slitWidth, setSlitWidth] = useState(.1);\n  const [showParticles, setShowParticles] = useState(false);\n    \n  const [observerEffect, setObserverEffect] = useState(false);\n  const [numPhotons, setNumPhotons] = useState(10000); // default number of photons\n  useEffect(() => {\n    // Fetch the HTML content from the public folder or wherever it's stored\n    fetch(\"converted_html.html\")\n      .then((response) => response.text())\n      .then((html) => {\n        setHtmlContent(html);\n      });\n  }, []);\n  const createMarkup = (html) => {\n    return { __html: html };\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Double Slit Experiment Simulation</h1>\n      </header>\n      <div style={{ display: \"flex\", flexGrow: 1 }}>\n        <div style={{ display: \"flex\" }}>\n          <div\n            className=\"controls\"\n            style={{ marginRight: \"1rem\", width: \"500px\" }}\n          >\n            <label>\n              Wavelength (nm):\n              <input\n                type=\"range\"\n                min=\"380\"\n                max=\"750\"\n                value={wavelength}\n                onChange={(e) => setWavelength(Number(e.target.value))}\n              />\n              {wavelength} nm\n            </label>\n            <label>\n              Distance to Screen (mm):\n              <input\n                type=\"range\"\n                min=\"1000\"\n                max=\"5000\"\n                value={distance}\n                onChange={(e) => setDistance(Number(e.target.value))}\n              />\n              {distance} mm\n            </label>\n            <label>\n              Slit Seperation (μm):\n              <input\n                type=\"range\"\n                min=\"800\"\n                max=\"1500\"\n                value={slitSeparation}\n                onChange={(e) => setSlitSeparation(Number(e.target.value))}\n              />\n              {slitSeparation} μm\n            </label>\n            <label>\n              Slit width(μm):\n              <input\n                type=\"range\"\n                min=\"300\"\n                max=\"2000\"\n                value={slitWidth}\n                onChange={(e) => setSlitWidth(Number(e.target.value))}\n              />\n              {slitWidth} μm\n            </label>\n            <label>\n              Show Particles:\n              <input\n                type=\"checkbox\"\n                checked={showParticles}\n                onChange={(e) => setShowParticles(e.target.checked)}\n              />\n            </label>\n            {showParticles && ( // Conditionally render \"Number of Photons\" if showParticles is true\n              <label>\n                Observer Effect:\n                <input\n                  type=\"checkbox\"\n                  checked={observerEffect}\n                  onChange={(e) => setObserverEffect(e.target.checked)}\n                />\n              </label>\n            )}\n            {showParticles && ( // Conditionally render \"Number of Photons\" if showParticles is true\n              <label htmlFor=\"numPhotons\">\n                Number of Photons:\n                <input\n                  id=\"numPhotons\"\n                  type=\"range\"\n                  min=\"100\"\n                  max=\"20000\"\n                  step=\"100\"\n                  value={numPhotons}\n                  onChange={(e) => setNumPhotons(Number(e.target.value))}\n                />\n                {numPhotons}\n              </label>\n            )}\n          </div>\n          <div style={{ flex: 1 }}>\n            <div className=\"WaveInterferenceContainer\">\n              <WaveInterference\n                wavelength={wavelength}\n                distance={distance}\n                slitSeparation={slitSeparation}\n                showParticles={showParticles}\n                observerEffect={observerEffect}\n                numPhotons={numPhotons}\n                slitWidth={slitWidth} // Pass the number of photons to the WaveInterference component\n              />\n            </div>\n            <div>\n              <DoubleSlit\n                wavelength={wavelength}\n                distance={distance}\n                slitSeparation={slitSeparation}\n                showParticles={showParticles}\n                slitWidth={slitWidth}\n              />\n            </div>\n          {/* HTML content column */}\n          <div style={{ flex: 1 }} className=\"html-content-column\">\n            <div dangerouslySetInnerHTML={createMarkup(htmlContent)} />\n          </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}