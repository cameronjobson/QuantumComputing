{"ast":null,"code":"// App.js\nimport React,{useState,useEffect}from\"react\";import'./App.css';import WaveInterference from'./WaveInterference';import DoubleSlit from\"./diagramComponent\";import{MathJaxContext}from'better-react-mathjax';// Assuming 'better-react-mathjax' package is used\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[htmlContent,setHtmlContent]=useState(\"\");const[wavelength,setWavelength]=useState(700);// in nanometers\nconst[distance,setDistance]=useState(2000);// distance to screen in mm\nconst[slitSeparation,setSlitSeparation]=useState(800);// slit separation in micrometers\nconst[slitWidth,setSlitWidth]=useState(300);const[showParticles,setShowParticles]=useState(false);const[observerEffect,setObserverEffect]=useState(false);const[numPhotons,setNumPhotons]=useState(10000);// default number of photons\nuseEffect(()=>{fetch(\"converted_html.html\").then(response=>response.text()).then(html=>{setHtmlContent(html);if(window.MathJax){window.MathJax.typesetPromise();}else{// If MathJax isn't loaded yet, wait a bit and then try again\nconst timeout=setTimeout(()=>{if(window.MathJax){window.MathJax.typesetPromise();}},3000);// Wait for 3 seconds\n// Clear the timeout if the component unmounts\nreturn()=>clearTimeout(timeout);}});},[]);const createMarkup=html=>{return{__html:html};};console.log(createMarkup(htmlContent));return/*#__PURE__*/_jsx(MathJaxContext,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Double Slit Experiment Simulation\"})}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexGrow:1},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",style:{marginRight:\"1rem\",width:\"500px\"},children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Wavelength (nm):\",/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"380\",max:\"750\",value:wavelength,onChange:e=>setWavelength(Number(e.target.value))}),wavelength,\" nm\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Distance to Screen (mm):\",/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"1000\",max:\"5000\",value:distance,onChange:e=>setDistance(Number(e.target.value))}),distance,\" mm\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Slit Seperation (\\u03BCm):\",/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"400\",max:\"1500\",value:slitSeparation,onChange:e=>setSlitSeparation(Number(e.target.value))}),slitSeparation,\" \\u03BCm\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Slit width(\\u03BCm):\",/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"300\",max:\"2000\",value:slitWidth,onChange:e=>setSlitWidth(Number(e.target.value))}),slitWidth,\" \\u03BCm\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Show Particles:\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showParticles,onChange:e=>setShowParticles(e.target.checked)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Insensity Graph:\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:observerEffect,onChange:e=>setObserverEffect(e.target.checked)})]}),showParticles&&/*#__PURE__*/ // Conditionally render \"Number of Photons\" if showParticles is true\n_jsxs(\"label\",{htmlFor:\"numPhotons\",children:[\"Number of Photons:\",/*#__PURE__*/_jsx(\"input\",{id:\"numPhotons\",type:\"range\",min:\"100\",max:\"20000\",step:\"100\",value:numPhotons,onChange:e=>setNumPhotons(Number(e.target.value))}),numPhotons]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"WaveInterferenceContainer\",children:[/*#__PURE__*/_jsx(WaveInterference,{wavelength:wavelength,distance:distance,slitSeparation:slitSeparation,showParticles:showParticles,observerEffect:observerEffect,numPhotons:numPhotons,slitWidth:slitWidth// Pass the number of photons to the WaveInterference component\n}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(DoubleSlit,{wavelength:wavelength,distance:distance,slitSeparation:slitSeparation,showParticles:showParticles,slitWidth:slitWidth})})]}),/*#__PURE__*/_jsx(\"div\",{style:{flex:1},className:\"html-content-column\",children:/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:createMarkup(htmlContent)})})]})]})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","WaveInterference","DoubleSlit","MathJaxContext","jsx","_jsx","jsxs","_jsxs","App","htmlContent","setHtmlContent","wavelength","setWavelength","distance","setDistance","slitSeparation","setSlitSeparation","slitWidth","setSlitWidth","showParticles","setShowParticles","observerEffect","setObserverEffect","numPhotons","setNumPhotons","fetch","then","response","text","html","window","MathJax","typesetPromise","timeout","setTimeout","clearTimeout","createMarkup","__html","console","log","children","className","style","display","flexGrow","marginRight","width","type","min","max","value","onChange","e","Number","target","checked","htmlFor","id","step","flex","dangerouslySetInnerHTML"],"sources":["/Users/amer_/Documents/GitHub/QuantumComputingPersonal/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport WaveInterference from './WaveInterference';\nimport DoubleSlit from \"./diagramComponent\";\nimport { MathJaxContext } from 'better-react-mathjax'; // Assuming 'better-react-mathjax' package is used\nfunction App() {\n   const [htmlContent, setHtmlContent] = useState(\"\");  \n  const [wavelength, setWavelength] = useState(700); // in nanometers\n  const [distance, setDistance] = useState(2000); // distance to screen in mm\n  const [slitSeparation, setSlitSeparation] = useState(800); // slit separation in micrometers\n  const [slitWidth, setSlitWidth] = useState(300);\n  const [showParticles, setShowParticles] = useState(false);\n    \n  const [observerEffect, setObserverEffect] = useState(false);\n  const [numPhotons, setNumPhotons] = useState(10000); // default number of photons\n  useEffect(() => {\n    fetch(\"converted_html.html\")\n      .then((response) => response.text())\n      .then((html) => {\n        setHtmlContent(html);\n        if (window.MathJax) {\n          window.MathJax.typesetPromise();\n        } else {\n          // If MathJax isn't loaded yet, wait a bit and then try again\n          const timeout = setTimeout(() => {\n            if (window.MathJax) {\n              window.MathJax.typesetPromise();\n            }\n          }, 3000); // Wait for 3 seconds\n          // Clear the timeout if the component unmounts\n          return () => clearTimeout(timeout);\n        }\n      });\n  }, []);\n  const createMarkup = (html) => {\n    return { __html: html };\n  };\n  console.log(createMarkup(htmlContent));\n  \n\n  return (\n    <MathJaxContext>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Double Slit Experiment Simulation</h1>\n        </header>\n        <div style={{ display: \"flex\", flexGrow: 1 }}>\n          <div style={{ display: \"flex\" }}>\n            <div\n              className=\"controls\"\n              style={{ marginRight: \"1rem\", width: \"500px\" }}\n            >\n              <label>\n                Wavelength (nm):\n                <input\n                  type=\"range\"\n                  min=\"380\"\n                  max=\"750\"\n                  value={wavelength}\n                  onChange={(e) => setWavelength(Number(e.target.value))}\n                />\n                {wavelength} nm\n              </label>\n              <label>\n                Distance to Screen (mm):\n                <input\n                  type=\"range\"\n                  min=\"1000\"\n                  max=\"5000\"\n                  value={distance}\n                  onChange={(e) => setDistance(Number(e.target.value))}\n                />\n                {distance} mm\n              </label>\n              <label>\n                Slit Seperation (μm):\n                <input\n                  type=\"range\"\n                  min=\"400\"\n                  max=\"1500\"\n                  value={slitSeparation}\n                  onChange={(e) => setSlitSeparation(Number(e.target.value))}\n                />\n                {slitSeparation} μm\n              </label>\n              <label>\n                Slit width(μm):\n                <input\n                  type=\"range\"\n                  min=\"300\"\n                  max=\"2000\"\n                  value={slitWidth}\n                  onChange={(e) => setSlitWidth(Number(e.target.value))}\n                />\n                {slitWidth} μm\n              </label>\n              <label>\n                Show Particles:\n                <input\n                  type=\"checkbox\"\n                  checked={showParticles}\n                  onChange={(e) => setShowParticles(e.target.checked)}\n                />\n              </label>\n              <label>\n                Insensity Graph:\n                <input\n                  type=\"checkbox\"\n                  checked={observerEffect}\n                  onChange={(e) => setObserverEffect(e.target.checked)}\n                />\n              </label>\n\n              {showParticles && ( // Conditionally render \"Number of Photons\" if showParticles is true\n                <label htmlFor=\"numPhotons\">\n                  Number of Photons:\n                  <input\n                    id=\"numPhotons\"\n                    type=\"range\"\n                    min=\"100\"\n                    max=\"20000\"\n                    step=\"100\"\n                    value={numPhotons}\n                    onChange={(e) => setNumPhotons(Number(e.target.value))}\n                  />\n                  {numPhotons}\n                </label>\n              )}\n            </div>\n            <div style={{ flex: 1 }}>\n              <div className=\"WaveInterferenceContainer\">\n                <WaveInterference\n                  wavelength={wavelength}\n                  distance={distance}\n                  slitSeparation={slitSeparation}\n                  showParticles={showParticles}\n                  observerEffect={observerEffect}\n                  numPhotons={numPhotons}\n                  slitWidth={slitWidth} // Pass the number of photons to the WaveInterference component\n                />\n                <div>\n                  <DoubleSlit\n                    wavelength={wavelength}\n                    distance={distance}\n                    slitSeparation={slitSeparation}\n                    showParticles={showParticles}\n                    slitWidth={slitWidth}\n                  />\n                </div>\n              </div>\n              <div style={{ flex: 1 }} className=\"html-content-column\">\n                <div dangerouslySetInnerHTML={createMarkup(htmlContent)} />\n              </div>\n\n              {/* HTML content column */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </MathJaxContext>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}